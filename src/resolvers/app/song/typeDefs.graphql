extend type Mutation {
    uploadDefaultFile(input: UploadDefaultFileInput!): URL

    uploadSong(input: UploadSongInput!): Song

    updateSong(input: UpdateSongInput!): Song

    uploadInstrument(input: UploadInstrumentInput!): Instrument

    updateInstrument(input: UpdateInstrumentInput!): Instrument

    deleteSong(input: DeleteSongInput!): Boolean

    deleteInstrument(input: DeleteInstrumentInput!): Boolean

    uploadFreeSong(input: UploadFreeSongInput!): ObjectID!
}

input DeleteInstrumentIdInput {
    instId: ObjectID!
}

input DeleteInstrumentInput {
    code: String!

    instrument: DeleteInstrumentIdInput!
}

input DeleteSongInput {
    code: String!

    song: DeleteSongIdInput!
}

input DeleteSongIdInput {
    songId: ObjectID!
}

extend type Query {
    getSong(songId: ObjectID!): Song

    querySong(filter: QuerySongInput!): [Song!]
}

enum GetSongsFilter {
    ALL
    NAME
    ARTIST
}

input QuerySongInput {
    type: GetSongsFilter!
    content: String
    level: Int
    genre: GENRE_TYPE
    weeklyChallenge: Boolean
    sort: SORT_OPTION! = DATE_DESC
}

input UpdateInstrumentAllInput {
    songId: ObjectID
    instId: ObjectID!
    name: String
    instURI: URL
    position: SESSION_TYPE
}

input UpdateInstrumentInput {
    code: String!
    instrument: UpdateInstrumentAllInput!
}

input UploadDefaultFileInput {
    code: String!
    file: Upload!
}

input UploadSongInput {
    code: String!
    song: UploadSongAllInput!
}

type Instrument {
    instId: ObjectID!
    songId: ObjectID!
    instURI: URL!
    name: String!
    duration: Float
    position: SESSION_TYPE!
}

interface SongInterface {
    songId: ObjectID!
    duration: Float!
    name: String!
    artist: String!
    songURI: URL!
}

type Song implements SongInterface {
    songId: ObjectID!
    name: String!
    songURI: URL!
    songImg: URL
    genre: GENRE_TYPE
    artist: String!
    album: String
    weeklyChallenge: Boolean!
    duration: Float!
    level: Int
    instrument: [Instrument!]
    releaseDate: Date
    band: [Band!]!
}

input UploadSongAllInput {
    name: String!
    songURI: URL!
    songImg: URL!
    genre: GENRE_TYPE!
    artist: String!
    album: String!
    weeklyChallenge: Boolean!
    level: Int!
    releaseDate: Date!
}

input UploadInstrumentAllInput {
    songId: ObjectID!
    name: String!
    instURI: URL!
    position: SESSION_TYPE!
}

input UploadInstrumentInput {
    code: String!
    instrument: UploadInstrumentAllInput!
}

input UpdateSongAllInput {
    songId: ObjectID!
    name: String
    songURI: URL
    songImg: URL
    genre: GENRE_TYPE
    artist: String
    album: String
    level: Int
    releaseDate: Date
    weeklyChallenge: Boolean
}

input UpdateSongInput {
    code: String!
    song: UpdateSongAllInput!
}

enum GENRE_TYPE {
    HIP_HOP
    ELECTRONIC
    BLUES
    POP
    JAZZ
    CLASSICAL
    ROCK
    DANCE
    BALLAD
    K_POP
}

input UploadFreeSongAllInput {
    name: String!
    songURI: URL!
    artist: String!
    songImg: URL
}

input UploadFreeSongInput {
    song: UploadFreeSongAllInput!
}
