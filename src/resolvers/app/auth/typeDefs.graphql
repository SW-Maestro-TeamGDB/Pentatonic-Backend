type Mutation {
    register(input: RegisterInput!): JWT

    sendAuthCode(input: sendAuthCodeInput!): Boolean

    login(input: LoginInput!): JWT

    resetPassword(input: ResetPasswordInput!): Boolean

    changePassword(input: ChangePasswordInput!): Boolean

    uploadImageFile(input: UploadImageInput!): URL

    changeProfile(input: ChangeProfileInput!): User

    deleteAccount(input: DeleteAccountInput!): Boolean
}

type Query {
    getUserInfo(userId: Id!): User

    findId(phoneNumber: PhoneNumber!, authCode: Int!): FindIdResult

    isValidId(id: Id!): Boolean

    isValidUsername(username: Username!): Boolean!

    checkAuthCode(phoneNumber: PhoneNumber!, authCode: Int!): Boolean!
}

interface UserInterface {
    id: Id!
    username: Username!
    profileURI: URL!
    phoneNumber: PhoneNumber
    prime: Boolean!
    introduce: String!
    type: Int!
}

type User implements UserInterface {
    id: Id!
    username: Username!
    profileURI: URL!
    phoneNumber: PhoneNumber
    prime: Boolean!
    introduce: String!
    type: Int!
    band: [Band!]!
    library: [Cover!]
    position: [PositionRank]
}

type PositionRank {
    position: String!
    likeCount: Int!
}

type FindIdResult {
    id: Id!
}

input UploadImageInput {
    file: Upload!
}

input sendAuthCodeInput {
    isRegistration: Boolean!
    phoneNumber: PhoneNumber!
}

input ResetPasswordInput {
    phoneNumber: PhoneNumber!

    authCode: Int!

    user: UserInPassword!
}

input RegisterArgs {
    username: Username!
    id: Id!
    password: Password!
    type: Int!
}

input RegisterInput {
    user: RegisterArgs!
    phoneNumber: PhoneNumber!
    authCode: Int!
}

input LoginInUser {
    id: Id!

    password: Password!
}

input LoginInput {
    user: LoginInUser!
}

input UserInPassword {
    password: Password!
}

input ChangePasswordArgs {
    changePassword: Password!
    password: Password!
}

input ChangePasswordInput {
    user: UserInPassword!
}

input ChangeProfileArgs {
    username: Username
    profileURI: URL
    introduce: String
    type: Int
}

input ChangeProfileInput {
    user: ChangeProfileArgs!
}

input DeleteAccountInput {
    user: UserInPassword!
}
