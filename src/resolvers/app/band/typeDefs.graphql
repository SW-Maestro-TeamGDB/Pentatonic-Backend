type Band {
    bandId: ObjectID!
    song: Song!
    name: String!
    introduce: String!
    creator: User!
    backGroundURI: URL!
    createDate: Date!
    session: [Session]
    isSoloBand: Boolean!
    isFreeBand: Boolean!
    viewCount: Int!
}

type Session {
    position: SESSION_TYPE!
    maxMember: Int!
    cover: [Cover!]
}

input SessionConfigInput {
    session: SESSION_TYPE!
    maxMember: Int!
}

input CreateBandAllInput {
    name: String!
    introduce: String!
    backGroundURI: URL
    songId: ObjectID!
    isSoloBand: Boolean!
}

input CreateBandInput {
    sessionConfig: [SessionConfigInput!]!
    band: CreateBandAllInput!
}

input UpdateBandAllInput {
    bandId: ObjectID!
    name: String
    introduce: String
    creatorId: Id
    backGroundURI: URL
}

input UpdateBandInput {
    band: UpdateBandAllInput!
    sessionConfig: [SessionConfigInput]
}

input JoinBandIdInput {
    bandId: ObjectID!
}

input JoinBandSessionInput {
    coverId: ObjectID!
    position: SESSION_TYPE!
}

input JoinBandInput {
    band: JoinBandIdInput!
    session: JoinBandSessionInput!
}

input LeaveBandCoverIdInput {
    coverId: ObjectID!
}

input LeaveBandIdInput {
    bandId: ObjectID!
}

input LeaveBandInput {
    band: LeaveBandIdInput!
    session: LeaveBandCoverIdInput!
}

input DeleteBandIdInput {
    bandId: ObjectID!
}

input DeleteBandInput {
    band: DeleteBandIdInput!
}

extend type Mutation {
    createBand(input: CreateBandInput!): Band

    updateBand(input: UpdateBandInput!): Band

    joinBand(input: JoinBandInput!): Boolean

    leaveBand(input: LeaveBandInput!): Boolean

    deleteBand(input: DeleteBandInput!): Boolean
}

enum BandFilter {
    SONG_NAME
    NAME
    INTRODUCE
    CREATOR_ID
    ALL
}

input QueryBandInput {
    type: BandFilter!
    content: String
    isSoloBand: Boolean
    isFreeSong: Boolean
    weeklyChallenge: Boolean
    genre: GENRE_TYPE
    level: Int
    sort: SORT_OPTION! = DATE_DESC
}

extend type Query {
    queryBand(
        filter: QueryBandInput!
        first: Int! = 10
        after: String
    ): BandOutPut

    getBand(bandId: ObjectID!): Band

    getRankedBands: [Band!]

    getTrendBands: [Band!]
}

type BandOutPut {
    bands: [Band]!
    pageInfo: PageInfo!
}
