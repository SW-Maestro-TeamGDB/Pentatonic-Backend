type Comment {
    bandId: ObjectID!
    user: User!
    content: String!
    createdAt: DateTime!
    commentId: ObjectID!
}

extend type Mutation {
    createComment(input: CreateCommentInput!): Comment

    deleteComment(input: DeleteCommentInput!): Boolean

    updateComment(input: UpdateCommentInput!): Comment
}

extend type Query {
    getComments(bandId: ObjectID!): [Comment!]!
        @deprecated(reason: "Use queryComments instead")

    queryComments(
        first: Int! = 10
        after: ObjectID
        bandId: ObjectID!
        sort: SORT_OPTION! = DATE_DESC
    ): CommentOutPut
}

type CommentOutPut {
    comments: [Comment!]!
    pageInfo: PageInfo!
}

input UpdateCommentAllInput {
    commentId: ObjectID!
    content: String!
}

input UpdateCommentInput {
    comment: UpdateCommentAllInput!
}

input DeleteCommentIdInput {
    commentId: ObjectID!
}

input DeleteCommentInput {
    comment: DeleteCommentIdInput!
}

input CreateCommentAllInput {
    content: String!
    bandId: ObjectID!
}

input CreateCommentInput {
    comment: CreateCommentAllInput!
}

extend type Band {
    comment(after: ObjectID, first: Int! = 10): CommentOutPut!
}
