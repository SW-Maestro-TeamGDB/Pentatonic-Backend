# FileUpload Type
scalar FileUpload

type Query{
    test: String!

    """ id가 조건에 맞는지 확인하는 쿼리 입니다. """
    checkId(
        "id는 길이가 6 이상이여야하며 영문과 숫자만 가능합니다. "
        id: String!
    ): Boolean!



    """ username이 조건에 맞는지 확인하는 쿼리 입니다. """
    checkUsername(
        "username은 길이가 2 이상이여야 합니다. "
        username: String!
    ): Boolean!


}

type Mutation{

    """ 회원가입 뮤테이션 이며 회원가입의 성공 여부를 1, 0으로 반환합니다. """
    register(
        "id 는 길이가 6 이상이여야하며 영문과 숫자만 가능합니다. "
        id: String!

        "pw 는 길이가 6 이상이여야하며 영문과 숫자 특수문자가 가능합니다. "
        pw: String!

        "username 은 길이가 2 이상이여야 합니다. "
        username: String!

        "phoneNumber 은 +821012345678 와 같은 형식이여야 합니다. "
        phoneNumber: PhoneNumber!


        "position 은 유저가 어떤 악기를 연주하는지를 나타냅니다."
        position: String!
        
        "level 은 유저가 얼마나 연주를 잘하는지를 나타냅니다 (1~5)"
        level: Int!

        "type 은 유저의 유형을 나타냅니다. (1: 취미, 2: 본업, 3: 리스너)"
        type: Int!

    ): Boolean!



    """인증번호를 전송하는 뮤테이션 입니다. (발송성공 ? 1 : 0)"""
    sendSMS(
        " phoneNumber은 +821012345678 와 같은 형식이여야 합니다. "
        phoneNumber: PhoneNumber!
    ): Boolean!



    "SMS 인증번호를 확인하는 뮤테이션 입니다. (본인확인 완료 ? 1 : 0)"
    checkSMS(
        " phoneNumber은 +821012345678 와 같은 형식이여야 합니다. "
        phoneNumber: PhoneNumber!

        "authenticationNumber 는 999999 와 같은 100000~999999 사이의 숫자 입니다. "
        authenticationNumber: Int!
    ): Boolean!

    test(data: PhoneNumber!): Boolean!



    """Login을 하는 뮤테이션 입니다. JWT 토큰을 반환합니다. """
    login(

        "계정의 id 입니다."
        id: String!,

        "계정의 pw 입니다."
        pw: String!
    ): JWT!
} 
